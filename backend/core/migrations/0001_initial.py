# Generated by Django 5.0.1 on 2025-10-15 05:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketResearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competitor_name', models.CharField(max_length=255)),
                ('competitor_url', models.URLField()),
                ('scraped_data', models.JSONField()),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('units_managed', models.IntegerField(blank=True, null=True)),
                ('service_offerings', models.JSONField(default=list)),
                ('pricing_data', models.JSONField(default=dict)),
                ('ai_insights', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-analysis_date'],
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('company_name', models.CharField(max_length=255)),
                ('provider_type', models.CharField(choices=[('landscaping', 'Landscaping'), ('snow_removal', 'Snow Removal'), ('hvac', 'HVAC'), ('plumbing', 'Plumbing'), ('electrical', 'Electrical'), ('general', 'General Repairs')], max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_jobs', models.IntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('resource_type', models.CharField(max_length=50)),
                ('resource_id', models.IntegerField()),
                ('details', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('zip_code', models.CharField(max_length=20)),
                ('property_type', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('mixed', 'Mixed Use')], max_length=20)),
                ('total_units', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance')], default='active', max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_date', models.DateTimeField()),
                ('inspection_type', models.CharField(default='routine', max_length=50)),
                ('images', models.JSONField(default=list)),
                ('ai_report', models.JSONField(blank=True, null=True)),
                ('overall_condition', models.CharField(blank=True, max_length=20, null=True)),
                ('severity_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('inspector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspections', to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='core.property')),
            ],
            options={
                'ordering': ['-inspection_date'],
            },
        ),
        migrations.CreateModel(
            name='PropertyMarketSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(default='zillow', max_length=100)),
                ('source_url', models.URLField(blank=True)),
                ('fetched_at', models.DateTimeField(auto_now_add=True)),
                ('listing_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rent_estimate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_per_sqft', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('beds', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('baths', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('square_feet', models.IntegerField(blank=True, null=True)),
                ('year_built', models.IntegerField(blank=True, null=True)),
                ('lot_size_sqft', models.IntegerField(blank=True, null=True)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_snapshots', to='core.property')),
            ],
            options={
                'ordering': ['-fetched_at'],
            },
        ),
        migrations.CreateModel(
            name='ComparableListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('distance_miles', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('beds', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('baths', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('square_feet', models.IntegerField(blank=True, null=True)),
                ('property_type', models.CharField(blank=True, max_length=100)),
                ('url', models.URLField()),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparables', to='core.propertymarketsnapshot')),
            ],
            options={
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('unit_number', models.CharField(max_length=20)),
                ('lease_start', models.DateField()),
                ('lease_end', models.DateField()),
                ('rent_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('security_deposit', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenants', to='core.property')),
            ],
            options={
                'ordering': ['property', 'unit_number'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('ai_analysis', models.JSONField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to='core.property')),
                ('service_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_requests', to='core.serviceprovider')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to='core.tenant')),
            ],
            options={
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='FinancialRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense')], max_length=10)),
                ('category', models.CharField(choices=[('rent', 'Rent Payment'), ('maintenance', 'Maintenance'), ('utilities', 'Utilities'), ('insurance', 'Insurance'), ('taxes', 'Property Taxes'), ('repairs', 'Repairs'), ('other', 'Other')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_records', to='core.property')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='core.tenant')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddIndex(
            model_name='propertymarketsnapshot',
            index=models.Index(fields=['property', '-fetched_at'], name='core_proper_propert_2e3988_idx'),
        ),
    ]
